package me.tudu.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UserTasksAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserTasksAllPropertiesEquals(UserTasks expected, UserTasks actual) {
        assertUserTasksAutoGeneratedPropertiesEquals(expected, actual);
        assertUserTasksAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserTasksAllUpdatablePropertiesEquals(UserTasks expected, UserTasks actual) {
        assertUserTasksUpdatableFieldsEquals(expected, actual);
        assertUserTasksUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserTasksAutoGeneratedPropertiesEquals(UserTasks expected, UserTasks actual) {
        assertThat(expected)
            .as("Verify UserTasks auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserTasksUpdatableFieldsEquals(UserTasks expected, UserTasks actual) {
        assertThat(expected)
            .as("Verify UserTasks relevant properties")
            .satisfies(e -> assertThat(e.getPrivilege()).as("check privilege").isEqualTo(actual.getPrivilege()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserTasksUpdatableRelationshipsEquals(UserTasks expected, UserTasks actual) {
        assertThat(expected)
            .as("Verify UserTasks relationships")
            .satisfies(e -> assertThat(e.getTask()).as("check task").isEqualTo(actual.getTask()));
    }
}
