package me.tudu.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UserWorkspacesAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserWorkspacesAllPropertiesEquals(UserWorkspaces expected, UserWorkspaces actual) {
        assertUserWorkspacesAutoGeneratedPropertiesEquals(expected, actual);
        assertUserWorkspacesAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserWorkspacesAllUpdatablePropertiesEquals(UserWorkspaces expected, UserWorkspaces actual) {
        assertUserWorkspacesUpdatableFieldsEquals(expected, actual);
        assertUserWorkspacesUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserWorkspacesAutoGeneratedPropertiesEquals(UserWorkspaces expected, UserWorkspaces actual) {
        assertThat(expected)
            .as("Verify UserWorkspaces auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserWorkspacesUpdatableFieldsEquals(UserWorkspaces expected, UserWorkspaces actual) {
        assertThat(expected)
            .as("Verify UserWorkspaces relevant properties")
            .satisfies(e -> assertThat(e.getPrivilege()).as("check privilege").isEqualTo(actual.getPrivilege()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserWorkspacesUpdatableRelationshipsEquals(UserWorkspaces expected, UserWorkspaces actual) {
        assertThat(expected)
            .as("Verify UserWorkspaces relationships")
            .satisfies(e -> assertThat(e.getWorkspace()).as("check workspace").isEqualTo(actual.getWorkspace()));
    }
}
